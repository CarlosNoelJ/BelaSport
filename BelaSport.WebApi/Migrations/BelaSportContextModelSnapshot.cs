// <auto-generated />
using BelaSport.Repository.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BelaSport.WebApi.Migrations
{
    [DbContext(typeof(BelaSportContext))]
    partial class BelaSportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BelaSport.Models.EventTitle", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DniHost")
                        .HasColumnName("dniHost");

                    b.Property<int>("EventTypeId")
                        .HasColumnName("eventTypeId");

                    b.Property<string>("NameEvent")
                        .IsRequired()
                        .HasColumnName("name_event")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EventId")
                        .HasName("pk_eventtitle");

                    b.HasIndex("DniHost");

                    b.HasIndex("EventTypeId");

                    b.ToTable("eventTitle");
                });

            modelBuilder.Entity("BelaSport.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventTypeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameEventType")
                        .IsRequired()
                        .HasColumnName("name_eventType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EventTypeId");

                    b.ToTable("eventType");
                });

            modelBuilder.Entity("BelaSport.Models.Host", b =>
                {
                    b.Property<int>("DniHost")
                        .HasColumnName("dniHost");

                    b.Property<string>("LastNameHost")
                        .IsRequired()
                        .HasColumnName("lastNameHost")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NameHost")
                        .IsRequired()
                        .HasColumnName("nameHost")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHost")
                        .IsRequired()
                        .HasColumnName("passwordHost")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DniHost")
                        .HasName("pk_host");

                    b.ToTable("host");
                });

            modelBuilder.Entity("BelaSport.Models.EventTitle", b =>
                {
                    b.HasOne("BelaSport.Models.Host", "DniHostNavigation")
                        .WithMany("EventTitle")
                        .HasForeignKey("DniHost")
                        .HasConstraintName("fk_eventTitle_host");

                    b.HasOne("BelaSport.Models.EventType", "EventType")
                        .WithMany("EventTitle")
                        .HasForeignKey("EventTypeId")
                        .HasConstraintName("fk_eventTitle_eventType");
                });
#pragma warning restore 612, 618
        }
    }
}
